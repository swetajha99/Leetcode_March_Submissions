class Solution {
    public int mostWordsFound(String[] sentences) {
        int maxcount =0;
        for(int i=0;i<sentences.length;i++){
            char[] ch = new char[sentences[i].length()]; int count=0;
            for(int j=0;j<sentences[i].length();j++){
                ch[j]=sentences[i].charAt(j);{
                    if(((j>0 &&ch[j]!=' ')&&ch[j-1]==' ') || (j==0 && ch[0]!=' ')){
                        count++;
                    }
                }
            }
            maxcount=Math.max(maxcount,count);
        }
        return maxcount;
    }
}
## Runtime 6ms;


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


class Solution {
    public int mostWordsFound(String[] sentences) {
        int max=0;
        for(int i=0; i<sentences.length; i++) {
            max = Math.max(max,(sentences[i].split(" ")).length);
        }
        return max;
    }
}

Runtime: 2ms;
