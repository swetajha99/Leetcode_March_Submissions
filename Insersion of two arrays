class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
      HashSet<Integer> hs = new HashSet<Integer>();
        for(int i=0;i<nums1.length;i++){
            for(int j=0;j<nums2.length;j++){
                if(nums1[i]==nums2[j]){
                    hs.add(nums1[i]);
                }
            }
        }
        
        int[] arr = new int[hs.size()];
        int i=0;
        for(int e:hs){
            arr[i++]=e;
        }
        return arr;
    }
}

T.C=O(N*M) SC=O(N)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
      HashSet<Integer> nums = new HashSet<Integer>();
      HashSet<Integer> res = new HashSet<Integer>();
        
        for(int e : nums1){
            nums.add(e);
        }
        
        for(int e : nums2){
            if(nums.contains(e)){
                res.add(e);
            }
        }
        int i=0;
        int[] arr = new int[res.size()];
        for(int e: res){
            arr[i++]=e;
        }
        
        return arr;
    }
}

TC - O(N+M) SC(N)
